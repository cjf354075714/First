二，数据链路层

1，基本概念
1.1，信道类型
1.1.1 点到点信道，一种一对一的通信方式
1.1.2 一对多的广播信道，专用的共享信道协议来协调主机的数据发送（ALOHA）
1.2，链路和数据链路
链路就是一条物理网线，数据链路是物理链路和协议的集成，网卡是实现数据链路层的一些基本协议的硬件
1.3，帧
将 IP 数据包按照一定的大小分割，然后前面加上帧头和物理地址后面加上帧尾和校验和，形成一个帧（顺序是怎么样的）

2，三个基本问题
2.1 封装成帧
在 IP 数据包的前面和后面加上帧头和帧尾，以便对面数据链路层可以知晓这是一个帧单位，使用两个特殊的字符或者字节来作为帧界定的位
2.2 透明传输
如果传输的内容，存在了帧头和帧尾的数据，需要保证避免帧的界定错误，
使用特殊字符填充的方法，比如 ESC 这个字符对应的 ASCII 码，然后 ESC 这个字符再加一个 ESC，这样就保证不会出现帧界定错误
接收方就直接减去这些转移字符就行了
2.3 差错控制
网络传输数据会有电磁干扰，为了检测出这些错误，需要有一种方法能够检测出错误
这里只看 CRC 循环冗余检验
数据链路层只负责无差错的接收数据，如果检测出来错误了，那么数据链路层直接丢弃，但是不要求重传
而是上层的传输层的协议来请求重传，那么这个 CRC 是路由器来实现呢，还是网卡来实现呢

3，点到点的通讯（广域网）
点到点的通讯使用的是 PPP 协议，工作在数据链路层，本质上就是实现了三个基本问题的一个协议，是一个实现，他和广播类型的协议
不一样的是，只是实现的方式不同而已。PPP 现在已是计网的标准
LCP（链路控制协议，可以实现身份验证，计费等）、HDLC 等都是 PPP 协议的组成部分
PPP 协议的帧格式：
7E FF 03 协议 IP 数据包 FCS 7E
 1  1   1    2     1500       2    1
 协议字段表示 IP数据包中的数据到底是什么协议的数据，FCS 是校验序列。PPP 协议是点对点的，不需要传输的地址
 PPP 协议实现透明传输的方式有：7E 转 7D + 5E（传输的是字节，二进制数字数量一定是 8 的倍数）、发现 5 个连续的 1 则填充一个 0（传输的是二进制流）
4，局域网里面的数据链路层（总线型）
局域网：局域网是几台电脑在一个地方连接在一起，当数据链路层的数据到达了这个局域网，接着就会采用广播信道传输的方式
来传输数据，至于局域网之间的数据传输那就是 PPP 协议了
局域网的主要结构有：星型、总线等
那么，在局域网中只有一条物理网线，需要保证多个计算机在发送消息的时候，保证消息不会出现冲突，有两种方式：
静态划分信道：频分复用、码分复用等，这是物理层的方式（太麻烦，不使用）
动态媒体接入控制：随机接入网络来通信，机会均等
以太网是局域网的一种技术，是目前局域网的实现的一种方式，被普遍采用
比如现在采用集线器将局域网内部的计算机连接起来，局域网内部的一个计算机将信息发送给另外一台计算机，实际上该集线器内部，也就是这个局域网
内部所有的计算机都将获取到这个消息，只是会将自己的 MAC 地址和消息中的 MAC 地址来进行比较，相同则获取，不同则丢弃，这也应该是网卡实现的
使用的是载波监听多点接入/碰撞检测（局域网使用的），具体的以太网使用的是 CSMA/CD 协议
该协议表明：多个计算机接入到同一根总线上，每次计算机发送数据之前，需要检测总线上是否有数据在传输，有得话，需要等待一段时间再检测发送
如果一个站点在中线上发送数据，那么总线上的信号电压就会发生变化，计算机通过判断总线上的电压变化，来判断是否有人在传输数据
4.1 传播延迟对载波监听的影响（这个很重要）
例如，两个计算机交互信息，传播延迟是 S ，那么计算机最短需要 S 最长需要 2S 的时间来知晓信道冲突（所以判断是否发生碰撞一定是在 2S 时间之后得出的）

4.2 CSMA/CD 以太网的特性
只能实现半双工，也就是说只能发送完再传输，传输玩再发送不能同时进行，因为在同一个局域网使用同一个总线，同时发送数据肯定会冲突

4.3 争用期
2S 代表着冲突检测是时间，以太网规定了 2S = 51.2 us，对于不同速率的以太网，发送数据的长度是不一样的，冲突的前字节数也是不一样的
比如 10 m/s 的以太网，在 51.2 us 内可以发送64字节的数据，所以以太网规定了最小的帧大小是64字节，所以冲突一定是发生在前 64 个字节的
如果在前 64 个字节发生了冲突，那么发生放就会停止发送，接收方接收到的也就是一个 少于 64 字节的消息，这样接收方就直接丢弃无用帧

4.4 以太网的限制
网线长度不能超过 100 m，局域网超过 100 m 也没啥意义了

4.5 二进制指数类型退避算法
现在，已经发生了冲突，需要停止发送数据，怎么停止发送呢？就是用这个退避算法
首先确定一个基本退避时间，就是 2S
之后定义一个 k 值，k = min[重传次数, 10];//每次重传失败，重传次数自增 1，但是不会超过 10
之后，构造一个整数集合：[0, 1, 2, ..., （2^k - 1）]，从数组中取一个值记为 a，那么下一次重传需要的延迟就是 a * 2S
当重传 16 次任然不能成功，就向上层报告

5 以太网
以太网是局域网的一个实现，满足带冲突检测的载波多路访问检测
为了使数据链路层适应多个局域网标准，标准制定组织将数据链路层分为了两个子层：MAC 层和 LLC 层。由于高层协议的制定，现在 LLC 层已经用的不多
所以可以将数据链路层只看成 MAC 层即可
以太网提供不可靠交付，尽最大努力交付。也就是说，还是数据链路层的，只负责无差错传输，不负责重传
集线器，工作物理层，将多个电脑连接成一个以太网，只是多个线的集合而已
5.1 以太网的信道利用率
发送数据的时间占发送数据和争用期时间纸盒
5.2 MAC 层
5.2.1 MAC地址
计算机网卡有一个地址，叫物理底层，是 48 位 2 进制数，全球唯一。前 24 位代表厂家，后 24 位代表厂商自己分配
一台计算机如果工作在一个局域网内，那么这台计算机的网卡可以听到局域网内部的信息通信，网卡就需要根据这个信息中的 MAC 帧中的 MAC 地址来
判断，如果是和自己的 MAC 相同就接收，如果不同就丢弃，有三种帧：
单播帧：那我就直接拿了
广播帧：即使不是我的，我也拿了
多播帧：还是直接拿了
5.2.2 以太网的帧格式
目标地址 + 源地址 + 类型 + IP数据包 + FCS
  6字节        6字节   2字节   46 ~ 1500     4     这里的 46 字节就是以太网规定传输帧必须大于 64 个字节，现除了目标地址、源地址等，就还差 46 个字节了
接着在 MAC 帧前面再加上 8 字节的帧头（前同步码 + 帧开始界定符）？帧尾呢
5.2.3 帧传输的最小的时间间隔
为了前一个帧接收好，我才能发后一个帧，时间间隔是 9.6 us
5.2.4 网桥
网桥是为了优化以太网，然后为了解决冲突域问题，而诞生了网桥，网桥工作在数据链路层
网桥可以过滤 MAC 帧，不同的计算机如果只在网桥的同一段，则网桥就不转发此帧。实际上，第一次 MAC 帧肯定是可以过网桥的，但是网桥在此时就可以
学到 MAC 地址在自己的那一端
集线器 -> 网桥
5.2.5 交换机
后来，网桥的扣太多了，那么该网桥就直接接上计算机，网桥就变成了交换机，用交换机连接的计算机，可以是全双工的
我觉得交换机也是工作在数据链路层的，它本质上还是一种网桥


三、网络层

1，基本概念
网络层在不同的网络之间负责转发数据包，根据 IP 地址来传输，路由器就工作在该层
但是网络层不保证数据传输的可靠性，丢包就丢包
路由器工作在网络层，两个路由器将两个交换机或者网桥连接起来，就把这两个局域网连接起来了
这里就涉及到几个地址的配置了：
IP 地址，该地址前面是网段地址，后面是在该网段中的地址
子网掩码：IP 地址与子网掩码想与，得出真正的子网地址
默认网关：路由器的网络地址（默认是网段中的第一个可用地址）
路由器内部有一个路由表，路由器在转发消息的时候，就可以自动写入转发信息到对应的网段中

2，网络设备
网络设备与 OSI 参考模型的关系
集线器、（网桥）、交换机、路由器、网关
集线器工作在物理层
交换机（网桥）工作在数据链路层
路由器工作在网络层


3，数据链路层的工作细节
在一台计算机发送一个数据包给另外一台计算机时，从网络层会得到 IP 地址，然后封装成 IP 数据包给数据链路层
数据链路层会事先判断该 IP 地址和自己的主机 IP 地址是否在同一个网段，也就是这个数据包是否需要走路由器
通过自己的 IP 地址与子网掩码得出自己的网段地址，通过接收方的 IP 地址和接收方的子网掩码得出接收方的网段地址来比较
如果是同一网段，则直接使用 ARP 协议，这个协议是通过 IP 地址获取 MAC 地址，直接在同一个网段内部广播一个数据帧，根据 IP 地址
获取MAC 地址，然后直接将 MAC 地址封装成 MAC 帧
如果不是同一个网段，需要事先按照路由器的转发，转发到另外一个局域网内部。那怎么将这个数据转发给路由器呢
也是通过 ARP 协议广播路由器在局域网内部的 MAC 地址，接着再封装 MAC 帧

4，TCP/IP 协议栈
4.1 ARP 协议
ARP 协议是同过 IP 获取 MAC 地址的协议，计算机在自己的局域网上发布一个广播地址，请求一个 IP 地址为 IP 地址的 MAC 地址
收到这个消息的计算机将上传 MAC 地址，需求计算机就知道了这个 MAC 地址，暂时记录在计算机中的缓存里

4.2 ICMP 协议
该协议用于网路层检测错误，最主要的例子就是 Ping 指令
Ping ip address TTL：表示这个数据包最多可以过多少个路由器
Ping 指令可以查看两台主机之间的路由器的地址，本质上是通过限制 TTL 的值