现在讨论的是四层分层协议：
物理链路层->网络层->传输层->应用层
以太网、网桥->IP协议->TCP\UDP->HTTP

一台电脑与另一台电脑的通信过程：
电脑A：发送一个Http请求，该请求是工作在应用层的一个http协议消息，然后传输层
封装该请求数据，添加上tcp协议头，网络层封装该数据添加上ip协议头，最后链路层添加上以太网首部并发送
电脑B：接收到消息后，层层剥离协议头，拿到原始数据

快递类比网络传输：
快递件：消息数据
商品信息、收获地址、收件人：协议头
收货地址：ip地址
收获人联系方式：mac地址
快递员：路由器
配送站：网关
配送车：物理介质

每层分工：
链路层：
我理解的就是，一个最底层的数据包，一个http协议的最小传输单位
一共包含三个部分：首部（14字节）+数据（46~1500字节）+尾部（4字节） = 64~1518字节？
首部包含三个部分：目标MAC地址、发送MAC地址和类型。尾部用于数据的校验，是保证可靠传输的一种方式
数据本体在46~1500字节之间，该大小好像是从哪来来确定的。
如果我传输的字节大于了1500，那么就需要切分数据包的形式
现在有了联系方式，在通过一个路由器之后，需要按照MAC地址找到接收方的电脑
需要电脑上装上（网络适配器）网卡，网卡包含MAC地址，6个字节前三个是厂商编号，后三个是流水号
因为ip地址只能映射到一个地方，而且ip地址是可以改变的，但是mac地址不能改变，就相当于知道了身份证号码（mac地址）
还是找不到你这个人，必须知道住址（ip地址），这两个地址结合，可以避免网络拓扑排序复杂等ip上的劣势等
数据包发送到一个ip区域内以后，每个主机都会接收消息，但是会根据数据包首部mac地址比较，如果不是我的，那就丢弃，是我的
才接收

网络层：
ip中两种：ipv4和ipv6。ipv4是32位地址，分为两部分，前面部分代表网络地址，后面部分代表网络中的局域网地址
ip地址有五个种类：
A类

所以，如果两个ip地址在同一个网络里面，那么这两个ip地址的网络地址就一定相同
使用ip地址和子网掩码进行and运算，可以得出网络地址
ARP协议是根据ip地址获得mac地址的一种协议。操作系统使用ARP协议向子网内所有计算机发送一个包含自己需要mac地址的计算机的ip地址
然后，该子网内的所有计算机都会获得该消息，比较自己的ip地址和消息中的ip地址，如果相等就返回自己的mac地址，如果不等
就丢弃，获得了mac地址之后，操作系统会暂时缓存ip地址和mac地址的暂时映射
但是，ARP协议是工作在子网中的，如果两个计算机不在同一个子网内部，就需要一个协议，将ARP协议包根据目标ip地址
发送到互联网上，找到另外一个子网，所以需要路由协议

ip数据包
首部20字节+数据（最大65515字节）
网络层的工作：根据目标ip地址寻找目标网段，根据ip地址转化为mac地址，路由不同的子网之间的数据

传输层：
现在我只能将一个数据包从一台计算机发送到另外一台计算机，但是不能找到是谁发送了这个数据，和是哪个应用需要这个数据
现在就需要传输层的协议工作
udp使用了消息+端口的方式，来确定计算机中哪个程序将获得该数据包
首部（8字节）+数据（最大65527字节）
udp简单的发送，不管其他计算机能不能接收到
所以tcp出现了：
A：我要发送数据了
B：好的我已经准备好了
A：我发送了

A：我要结束消息了
B：好的我已经准备好了
A：我结束了
B：我也结束了

现在传输层也正确工作传输数据了，但是传输的确实字节流的数据，所以现在需要应用程序协议
这些应用层协议主要是将我们发送的数据解析成为一串字节流数据，该过程全是操作系统完成的

物理链路层：
封装成帧：
在传输的时候，需要将ip数据包拆分，因为不可能直接传输所有的数据，所以将数据报打包成
帧首部+数据报+帧尾部的样式。其中数据报就是ip数据报，MTU。
帧头尾的目的是保证一个帧的完整，SOH和EOT一般使用不可打印字符来标识
在插入帧尾EOT的时候，需要插入转义帧数据ESC，类似于 '\'

透明传输：
加入转义字符的目的就是为了避免帧鉴定错误，但传输过程中不知道帧的问题，这就是透明传输

差错控制：
分为两种：检验错误和纠正错误
后面再来补

PPP协议（Point to Point P）

PPP协议帧格式：
就是数据链路层的成的帧
F A C 协议 数据 FCS F
F是帧头帧尾
