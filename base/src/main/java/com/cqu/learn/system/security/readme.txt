JAVA 的安全策略和实现的方式：
比如，我们使用一个 File 对象去访问操作系统中的文件，这样做是不是安全的呢？
还比如，我们使用某个类加载器去加载类，当前代码是否允许获得类加载器呢？
想要解决这些问题，需要用到安全策略

1，Java security 整体安全性通过多种方式实现
Java 是类型安全的，一个类不可能访问到另一个类的私有属性和私有方法，除非使用反射。还有内存回收，
比如某部分内存不再使用了，虚拟机自动回收，确保内存不会溢出等，还有字符串和数组越界检查等
2，jvm 只运行自己认识的字节码文件，加载、验证、准备、解析中的验证就是验证字节码是否安全，是否会
损失虚拟机的安全的情况
3，双亲委派机制，该机制就是只有核心的加载器，才能够加载到核心的字节码文件，这样就不会出现
加载器记载我们自己写的 Integer 类的情况了

Java 中的安全模型
1，1.0 的安全模型将本地代码和远程代码分开，本地代码被信任，可以访问本地资源文件，远程代码在沙箱中执行
但是远程代码不能访问本地资源文件，如果用户想要远程代码访问本地资源，现在安全模型就不适合了。那么什么是元亨代码呢
2，在 1.1 的模型上，远程代码在受信任的情况下，可以访问本地资源，那么这个信任是怎么实现的？
3，在 1.2 的模型上，采用了域的概念，不同的类使用的是不同的类加载器加载进来的，也就是说，同一个类加载器
加载进来的类，会拥有不同的安全权限。
那么如何来使用安全包下的工具获得资源文件的访问呢？
比如：当前代码没有权限访问文件，可是又需要这样的文件才能执行，所以需要扩展权限，doPrivileged 方法可以
扩大访问权限。

访问控制（AccessController）
该对象提供一个默认的安全策略执行机制，使用栈检查来决定潜在的不安全的操作是否允许
AccessController 三个目的：
1，根据当前的有效策略决定是否允许或者拒绝关键资源的访问
2，当代码标记为“特权”，从而影响后续的访问决定
3，